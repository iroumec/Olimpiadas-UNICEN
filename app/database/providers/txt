const (
    var expirationTime = 7*24*time.Hour
)

// Se revisa que el dato esté cacheado.
cached, ok := repo.Cache.GetByID("27205")
// Si está cacheado y no pasó el tiempo de expiración, se devuelve el dato cacheado.
if ok && time.Since(cached.UpdatedAt) < expirationTime {
	return cached
}
// En otro caso, se refresca el dato.
fresh, err := provider.GetByID("27205")
if err == nil {
	repo.Cache.Save(fresh)
	return fresh
}
return cached // Fallback si el proveedor falla.
